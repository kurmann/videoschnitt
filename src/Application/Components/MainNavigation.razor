@using Microsoft.AspNetCore.Components
@using Kurmann.Videoschnitt.Messages.HealthCheck
@inject NavigationManager Navigation
@inject Wolverine.IMessageBus bus
@inject Kurmann.Videoschnitt.Workflows.FinalCutProWorkflow FinalCutProWorkflow

<nav>
    <a @onclick="async () => await ExecuteMetadataProcessing()">Metadaten-Verarbeitung</a>
    <a @onclick="async () => await RequestHealthCheck()">Status</a>
    <a href="/swagger">API-Dokumentation</a>
</nav>

@code {
    [Parameter]
    public EventCallback<string> OnLogAdded { get; set; }

    private async Task ExecuteMetadataProcessing()
    {
        var progress = new Progress<string>(async statusUpdate =>
        {
            await OnLogAdded.InvokeAsync(statusUpdate);
        });

        await FinalCutProWorkflow.ExecuteAsync(progress);
    }

    private async Task RequestHealthCheck()
    {
        await bus.SendAsync(new HealthCheckRequest());
    }
}