@namespace Kurmann.Videoschnitt.Application.Components

@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@inject Wolverine.IMessageBus bus
@inject Kurmann.Videoschnitt.Workflows.FinalCutProWorkflow FinalCutProWorkflow
@inject Kurmann.Videoschnitt.Workflows.HealthCheckWorkflow HealthCheckWorkflow

<nav>
    <a @onclick="async () => await ExecuteMetadataProcessing()">Metadaten-Verarbeitung</a>
    <a @onclick="async () => await ExecuteHealthCheck()">Status</a>
    <a href="/swagger">API-Dokumentation</a>
</nav>

@code {
    [Parameter]
    public EventCallback<string> OnLogAdded { get; set; }

    private async Task ExecuteMetadataProcessing()
    {
        var progress = new Progress<string>(async statusUpdate =>
        {
            await OnLogAdded.InvokeAsync(statusUpdate);
        });

        await FinalCutProWorkflow.ExecuteAsync(progress);
    }

    private async Task ExecuteHealthCheck()
    {
        var progress = new Progress<string>(async statusUpdate =>
        {
            await OnLogAdded.InvokeAsync(statusUpdate);
        });

        await HealthCheckWorkflow.ExecuteAsync(progress);
    }
}