@page "/"
@namespace Kurmann.Videoschnitt.Application.Pages
@inject Kurmann.Videoschnitt.Workflows.FinalCutProWorkflow FinalCutProWorkflow
@inject Kurmann.Videoschnitt.Workflows.HealthCheckWorkflow HealthCheckWorkflow

<h1>Willkommen bei Kurmann Videoschnitt</h1>

<MainNavigation OnMetadataProcessing="ExecuteMetadataProcessing" OnHealthCheck="ExecuteHealthCheck" />
<LogContainer Logs="logs" />

@code {
    private List<string> logs = new List<string>();

    private async Task HandleLogAdded(string log)
    {
        logs.Add(log);
        await InvokeAsync(StateHasChanged);
    }

    private async Task ExecuteMetadataProcessing()
    {
        var result = await FinalCutProWorkflow.ExecuteAsync();
        if (result.IsFailure)
        {
            logs.Add($"Fehler während der Ausführung des Final Cut Pro Workflows: {result.Error}");
        }
        else
        {
            logs.Add("Final Cut Pro Workflow erfolgreich abgeschlossen.");
        }

        await InvokeAsync(StateHasChanged);
    }

    private void ExecuteHealthCheck()
    {
        var result = HealthCheckWorkflow.Execute();
        if (result.IsFailure)
        {
            logs.Add($"Fehler während der Ausführung des Health Checks: {result.Error}");
        }
        else
        {
            logs.Add("Health Check erfolgreich abgeschlossen.");
        }

        InvokeAsync(StateHasChanged);
    }
}